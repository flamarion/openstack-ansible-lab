---
- name: Controller nodes configuration
  hosts: controllers
  become: yes
  gather_facts: yes

  tasks:
  - name: Install chrony ntp service
    ansible.builtin.apt:
      name: chrony
      state: latest
      update_cache: yes
  - name: Deploy chrony.conf template
    ansible.builtin.template:
      src: templates/controllers/controller-chrony.conf.j2
      dest: /etc/chrony/chrony.conf
      backup: yes
    register: chrony_config
  - name: Restart chrony
    ansible.builtin.systemd:
      name: chronyd
      state: restarted
      enabled: yes
    when: chrony_config.changed
  # Mysql
  - name: Install Mariadb
    ansible.builtin.apt:
      name: "{{ item }}"
      state: latest
      update_cache: yes
    with_items:
      - mariadb-server
      - python3-pymysql
    register: mariadb_installed
  - name: Deploy Mariadb Openstack configuration
    ansible.builtin.template:
      src: templates/controllers/99-openstack.cnf.j2
      dest: /etc/mysql/mariadb.conf.d/99-openstack.cnf
    register: mysql_config
    when: mariadb_installed is succeeded
  - name: Restart mariadb
    ansible.builtin.systemd:
      name: mariadb
      state: restarted
      enabled: yes
    when: mysql_config.changed
  # RabbitMQ
  - name: Install RabbitMQ
    ansible.builtin.apt:
      name: rabbitmq-server
      state: latest
      update_cache: yes
    register: rabbitmq_installed
  - name: Add openstack user to rabbitmq
    community.rabbitmq.rabbitmq_user:
      user: "{{ openstack_user }}"
      password: "{{ admin_pass }}"
      vhost: /
      configure_priv: .*
      read_priv: .*
      write_priv: .*
      state: present
    when: rabbitmq_installed is succeeded
  # Memcached
  - name: Install Memcached
    ansible.builtin.apt:
      name: "{{ item }}"
      state: latest
      update_cache: yes
    loop:
      - memcached
      - python3-memcache
    register: memcached_installed
  - name: Configure memcached
    ansible.builtin.lineinfile:
      path: /etc/memcached.conf
      regexp: "^-l.*"
      line: "-l {{ hostvars[groups['controllers'][0]]['ansible_default_ipv4']['address'] }}"
    when: memcached_installed is succeeded
    register: memcached_configured
  - name: Restart memcached
    ansible.builtin.systemd:
      name: memcached
      state: restarted
    when: memcached_configured.changed


  