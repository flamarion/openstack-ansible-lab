- name: Create glance database
  community.mysql.mysql_db:
    login_unix_socket: /var/run/mysqld/mysqld.sock
    name: glance
    state: present

- name: Create glance db user
  community.mysql.mysql_user:
    login_unix_socket: /var/run/mysqld/mysqld.sock
    state: present
    name: glance
    host: "{{ item }}"
    password: "{{ admin_pass }}"
    priv:
      "glance.*": "ALL,GRANT"
  with_items:
    - localhost
    - "{{ hostvars[groups['controllers'][0]]['ansible_hostname'] }}"
    - "{{ groups['controllers'][0] }}"

- name: Create OS glance user
  openstack.cloud.identity_user:
    cloud: os-admin
    description: "Glance Service User"
    state: present
    name: glance
    password: "{{ admin_pass }}"
    domain: default
    default_project: service

- name: Assing role admin to glance user in service project
  openstack.cloud.role_assignment:
    cloud: os-admin
    user: glance
    role: admin
    project: service

- name: Create glance service
  openstack.cloud.catalog_service:
    cloud: os-admin
    state: present
    name: glance
    service_type: image
    description: OpenStack Image Service

- name: Create glance service endpoint
  openstack.cloud.endpoint:
    cloud: os-admin
    service: glance
    endpoint_interface: "{{ item }}"
    url: "http://{{ hostvars[groups['controllers'][0]]['ansible_hostname'] }}:9292"
    region: RegionOne
    state: present
  with_items:
    - admin
    - public
    - internal

- name: Install glance
  ansible.builtin.apt:
    name: glance
    state: "{{ ('present' if op == 'install') or 'latest' }}"
    update_cache: true
  register: glance_installed

- name: Glance configuration
  ansible.builtin.template:
    src: glance.conf.j2
    dest: /etc/glance/glance-api.conf
    mode: 0640
    owner: glance
    group: glance
  register: glance_config
  when: glance_installed is succeeded

- name: Perform a glance DB sync
  ansible.builtin.command: "glance-manage db_sync"
  become: true
  become_user: glance
  become_method: sudo
  become_flags: 'su - glance -s /bin/sh -c'
  args:
    creates: /etc/glance/glance_db_synced
  register: glance_db_synced
  notify:
    - Restart glance-api

- name: Create lock file after db sync
  ansible.builtin.file:
    path: /etc/glance/glance_db_synced
    state: touch
    owner: glance
    mode: 0644
  when: glance_db_synced is succeeded

- name: Start glance-api service
  ansible.builtin.systemd:
    name: glance-api
    state: started
